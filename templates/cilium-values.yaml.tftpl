kubeProxyReplacement: true
rollOutCiliumPods: true

k8sServiceHost: localhost
k8sServicePort: 7445

routingMode: tunnel
tunnelProtocol: vxlan

cluster:
  id : ${cluster_id}
  name: ${cluster_name}

k8sClientRateLimit: 
  qps: 50
  burst: 100

cgroup:
  hostRoot: /sys/fs/cgroup
  autoMount: 
    enabled: false

externalIPs:
  enabled: true

gatewayAPI:
  enabled: true

l2announcements:
  enabled: true

ipam:
  mode: kubernetes

hubble:
  tls:
    auto:
      method: cronJob

ipv4NativeRoutingCIDR: ${pod_subnet}

%{~ if mesh_api_lb != "" && clusters != null ~}
clusterMesh:
  enabled: true
agents:
  config:
    clusterMeshPort: 7445

clustermesh:
  useAPIServer: true
  enableEndpointSliceSynchronization: false # TODO: Later
  enableMCSAPISupport: false # TODO: Later
  annotations: {}
  config:
    enabled: true
    clusters:
      %{ for cluster, ips in clusters }
      - name: ${cluster}
        ips:
          %{ for ip in ips }
          - ${ip}
          %{ endfor ~}
      %{ endfor ~}
  apiserver:
    service:
      type: LoadBalancer
      labels:
        - cluster-mesh-lb: "true"
%{endif}

%{~ if ca_cert != "" && ca_key != "" ~}
tls:
  ca:
    cert: ${ca_cert}
    key: ${ca_key}
%{endif}

operator:
  replicas: 1
  tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists

securityContext:
  capabilities:
    ciliumAgent:
      - CHOWN
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - SYS_ADMIN
      - SYS_RESOURCE
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    cleanCiliumState:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_RESOURCE
